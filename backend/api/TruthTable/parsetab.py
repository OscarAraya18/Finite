
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDleftORleftXORleftNANDleftNORleftXNORleftNOTAND LEFTPARENTHESIS NAND NOR NOT OPERAND OR RIGHTPARENTHESIS XNOR XORexpression : NOT expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression XOR expression\n                  | expression NAND expression\n                  | expression NOR expression\n                  | expression XNOR expressionexpression : LEFTPARENTHESIS expression RIGHTPARENTHESISexpression : OPERAND'
    
_lr_action_items = {'NOT':([0,2,3,5,6,7,8,9,10,],[2,2,2,2,2,2,2,2,2,]),'LEFTPARENTHESIS':([0,2,3,5,6,7,8,9,10,],[3,3,3,3,3,3,3,3,3,]),'OPERAND':([0,2,3,5,6,7,8,9,10,],[4,4,4,4,4,4,4,4,4,]),'$end':([1,4,11,13,14,15,16,17,18,19,],[0,-9,-1,-2,-3,-4,-5,-6,-7,-8,]),'AND':([1,4,11,12,13,14,15,16,17,18,19,],[5,-9,-1,5,-2,-3,-4,-5,-6,-7,-8,]),'OR':([1,4,11,12,13,14,15,16,17,18,19,],[6,-9,-1,6,6,-3,-4,-5,-6,-7,-8,]),'XOR':([1,4,11,12,13,14,15,16,17,18,19,],[7,-9,-1,7,7,7,-4,-5,-6,-7,-8,]),'NAND':([1,4,11,12,13,14,15,16,17,18,19,],[8,-9,-1,8,8,8,8,-5,-6,-7,-8,]),'NOR':([1,4,11,12,13,14,15,16,17,18,19,],[9,-9,-1,9,9,9,9,9,-6,-7,-8,]),'XNOR':([1,4,11,12,13,14,15,16,17,18,19,],[10,-9,-1,10,10,10,10,10,10,-7,-8,]),'RIGHTPARENTHESIS':([4,11,12,13,14,15,16,17,18,19,],[-9,-1,19,-2,-3,-4,-5,-6,-7,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,3,5,6,7,8,9,10,],[1,11,12,13,14,15,16,17,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> NOT expression','expression',2,'p_expression_logicOperation','syntacticAnalyzer.py',21),
  ('expression -> expression AND expression','expression',3,'p_expression_logicOperation','syntacticAnalyzer.py',22),
  ('expression -> expression OR expression','expression',3,'p_expression_logicOperation','syntacticAnalyzer.py',23),
  ('expression -> expression XOR expression','expression',3,'p_expression_logicOperation','syntacticAnalyzer.py',24),
  ('expression -> expression NAND expression','expression',3,'p_expression_logicOperation','syntacticAnalyzer.py',25),
  ('expression -> expression NOR expression','expression',3,'p_expression_logicOperation','syntacticAnalyzer.py',26),
  ('expression -> expression XNOR expression','expression',3,'p_expression_logicOperation','syntacticAnalyzer.py',27),
  ('expression -> LEFTPARENTHESIS expression RIGHTPARENTHESIS','expression',3,'p_expression_parenthesis','syntacticAnalyzer.py',59),
  ('expression -> OPERAND','expression',1,'p_expression','syntacticAnalyzer.py',67),
]
